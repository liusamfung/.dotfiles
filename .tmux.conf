unbind r
bind r source-file ~/.tmux.conf
set -g prefix C-x

set-option -g status-position top
# set -g mouse on # Habilitar resize de panes con el mouse(Guarda y refresca con <C-a> + r)

# Change the keybinding to enter copy mode from 'prefix + [' to 'prefix + v'
unbind v
bind v copy-mode

#=========================================VIM/COPY mode==========================================
# This enables vim nagivation
# If for example I'm in the scrolling mode (yellow) can navigate with vim motions
# search with /, using v for visual mode, etc
set -g mode-keys vi

# Bind Esc to exit copy-mode
bind-key -T copy-mode-vi 'Escape' send -X cancel

# start selecting text with "v", this is visual mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
# copy text with "y"
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Thi is what allows me to press gh and gl to to to the beginning and end of
# line respectively when in copy-mode (visual mode)
# Unbind the default 'g' key in copy-mode-vi
unbind -T copy-mode-vi g
# Define a custom key table for extended copy-mode bindings
bind-key -T copy-mode-vi 'g' switch-client -T copy-mode-extended
# Bind 'h' in the extended copy-mode to go to the beginning of the line
bind-key -T copy-mode-extended 'h' send -X start-of-line \; switch-client -T copy-mode-vi
# Bind 'l' in the extended copy-mode to go to the end of the line
bind-key -T copy-mode-extended 'l' send -X end-of-line \; switch-client -T copy-mode-vi

# Nope, disabled this as I use them for telescope buffers and snipe
# bind-key -T copy-mode-vi 'H' send -X start-of-line
# bind-key -T copy-mode-vi 'L' send -X end-of-line

# don't exit copy mode when dragging with mouse
unbind -T copy-mode-vi MouseDragEnd1Pane
#================================================================================
# Border lines between panes are thicker
# single -> single lines using ACS or UTF-8 characters
# double -> double lines using UTF-8 characters
# heavy  -> heavy lines using UTF-8 characters
# simple -> simple ASCII characters
# number -> the pane number
set -g pane-border-lines heavy

# Indicate active pane by colouring only half of the border in windows with 
# exactly two panes, by displaying arrow markers, by drawing both or neither.
# [off | colour | arrows | both]
set -g pane-border-indicators both

# Enables tracking of focus events, allows tmux to respond when the terminal
# window gains or looses focus
set-option -g focus-events on

# # Change color of focused and unfocused panes, it helps me easily identify where
# # my cursor is
# # Make sure these colors also match your neovim autocmd if you change them
# set-hook -g pane-focus-in 'select-pane -P "bg=$linkarzu_color10,fg=white"'
# set-hook -g pane-focus-out 'select-pane -P "bg=$linkarzu_color07,fg=default"'



# New windows normally start at 0, but I want them to start at 1 instead
set -g base-index 1

# Imagine if you have windows 1-5, and you close window 3, you are left with
# 1,2,4,5, which is inconvenient for my navigation method seen below
# renumbering solves that issue, so if you close 3 youre left with 1-4
set -g renumber-windows on

# Switch to windows 1 through X
bind h select-window -t 1
bind j select-window -t 2
bind k select-window -t 3
unbind l   # 'l' is normally used to go to the last window, but I won't use it
bind l select-window -t 4
bind y select-window -t 5
bind u select-window -t 6
bind i select-window -t 7
bind o select-window -t 8
unbind p   # 'p' is normally used to go to the previous window, but I won't use it
bind p select-window -t 9
#========================================================================
# With this set to off
# when you close the last window in a session, tmux will keep the session
# alive, even though it has no windows open. You won't be detached from
# tmux, and you'll remain in the session
set -g detach-on-destroy off

# When pressing prefix+s to list sessions, I want them sorted by time
# That way my latest used sessions show at the top of the list
# -s starts with sessions collapsed (doesn't show windows)
# -Z zooms the pane (don't uderstand what this does)
# -O specifies the initial sort field: one of ‘index’, ‘name’, or ‘time’ (activity).
# https://unix.stackexchange.com/questions/608268/how-can-i-force-tmux-to-sort-my-sessions-alphabetically
#
# bind s choose-tree -Zs -O time
# bind s choose-tree -Zs -O time -y
bind s choose-tree -Zs -O time -F "#{session_windows}"
# -y at the end is a feature I requested so that the session is closed without confirmation
# https://github.com/tmux/tmux/issues/4152
# bind s choose-tree -Zs -O time -F "#{session_windows}" -y
# bind s choose-tree -Zs -O time -F "#{?session_attached,#[fg=$linkarzu_color02],#[fg=$linkarzu_color03]}#{session_name}#[default]" -y
# bind s choose-tree -Zs -O time -F "#{?session_attached,#[fg=$linkarzu_color02],#[fg=$linkarzu_color03]}" -y


# Alternate session
# Switch between the last 2 tmux sessions, similar to 'cd -' in the terminal
# I use this in combination with the `choose-tree` to sort sessions by time
# Otherwise, by default, sessions are sorted by name, and that makes no sense
# -l stands for `last session`, see `man tmux`
unbind Space
bind-key Space switch-client -l
##############################################################################
##############################################################################

# Tmux Plugin Manager (tpm), to install it, clone the repo below
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'


set -g @plugin 'catppuccin/tmux#v2.1.3' # See https://github.com/catppuccin/tmux/tags for additional tags

# Add the colors from the pallete. Check the themes/ directory for all options.
# Some basic mocha colors.
set -g @ctp_bg "#24273a"
set -g @ctp_surface_1 "#494d64"
set -g @ctp_fg "#cad3f5"
set -g @ctp_mauve "#c6a0f6"
set -g @ctp_crust "#181926"

# status line
set -gF status-style "bg=#{@ctp_bg},fg=#{@ctp_fg}"

# windows
set -gF window-status-format "#[bg=#{@ctp_surface_1},fg=#{@ctp_fg}] ##I ##T "
set -gF window-status-current-format "#[bg=#{@ctp_mauve},fg=#{@ctp_crust}] ##I ##T "
# Options to make tmux more pleasant
set -g default-terminal "tmux-256color"

#################################### Configure the catppuccin plugin###################
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "slanted"

run ~/.tmux/plugins/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_application}"
# Delpues de un -g de izquierda a derecha, en necesario que el siguiente argumento sea -aG
# set -ag status-right "#{E:@catppuccin_status_uptime}" ## Tiempo que tu computadora esta encendida.

# Or, if using TPM, just run TPM
##############################################################################
# Other plugins
##############################################################################

# list of tmux plugins

# for navigating between tmux panes using Ctrl-hjkl
# If you have neovim open in a tmux pane, and another tmux pane on the right,
# you won't be able to jump from neovim to the tmux pane on the right.
#
# If you want to do jump between neovim and tmux, you need to install the same
# 'vim-tmux-navigator' plugin inside neovim

# set -g @plugin 'christoomey/vim-tmux-navigator'

# # persist tmux sessions after computer restart
# # https://github.com/tmux-plugins/tmux-resurrect
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# # allow tmux-ressurect to capture pane contents
# set -g @resurrect-capture-pane-contents 'on'

# # automatically saves sessions for you every 15 minutes (this must be the last plugin)
# # https://github.com/tmux-plugins/tmux-continuum
# set -g @plugin 'tmux-plugins/tmux-continuum'
# # enable tmux-continuum functionality
# set -g @continuum-restore 'on'
# # Set the save interval in minutes, default is 15
# set -g @continuum-save-interval '5'

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
